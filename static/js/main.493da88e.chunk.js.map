{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","Components/Notifications/Notifications.jsx","reportWebVitals.js","index.js","Components/Container/Container.module.css"],"names":["module","exports","Container","props","className","s","container","children","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","onSubmit","clearInput","action","this","contactForm","contactForm__label","htmlFor","type","placeholder","pattern","title","required","onChange","Button","React","Component","Filter","filter__input","ContactList","contacts","deleteContact","map","cont","contactList__item","contactList__name","contactList__number","variant","onClick","id","App","onDeleteContact","filter","store","addNotification","message","animationIn","animationOut","dismiss","duration","onScreen","touchSlidingExit","swipe","timingFunction","delay","fade","duplicationCheck","newName","find","contact","addContact","console","log","uuidv4","insert","setFilter","event","currentTarget","trim","getFilteredResult","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","container__label","container__contacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.493da88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3Ls4M\",\"contactForm__label\":\"ContactForm_contactForm__label__5r4L9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__1V0ez\",\"contactList__name\":\"ContactList_contactList__name__3KmzM\",\"contactList__number\":\"ContactList_contactList__number__3YAoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__3ocP5\"};","import s from './Container.module.css';\r\nfunction Container(props) {\r\n  return <div className={s.container}> {props.children}</div>;\r\n}\r\n\r\nexport { Container };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends React.Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.clearInput();\r\n  };\r\n\r\n  clearInput = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form action=\"\" onSubmit={this.handleSubmit} className={s.contactForm}>\r\n          <label className={s.contactForm__label} htmlFor=\"\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"John Snow\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.contactForm__label} htmlFor=\"\">\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"+38(093)9995040\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  phone: PropTypes.number,\r\n};\r\n\r\nexport { ContactForm };\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ name, onChange }) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\">\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter__input}\r\n          type=\"text\"\r\n          name={name}\r\n          placeholder=\"find by name..\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Filter };\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  //   contacts = [\r\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  //   ];\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(cont => {\r\n          return (\r\n            <li className={s.contactList__item} key={cont.id}>\r\n              <span className={s.contactList__name}>{cont.name}</span>\r\n              <span className={s.contactList__number}>{cont.number}</span>\r\n              <Button variant=\"danger\" onClick={() => deleteContact(cont.id)}>\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n};\r\n\r\nexport { ContactList };\r\n","import './App.css';\nimport React from 'react';\nimport { Container } from './Components/Container/Container';\nimport { ContactForm } from './Components/ContactForm/ContactForm';\nimport { Filter } from './Components/Filter/Filter';\nimport { ContactList } from './Components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport ReactNotifications from 'react-notifications-component';\nimport {\n  onSuccsessNotification,\n  onErrorNotification,\n  onDeleteNotification,\n} from './Components/Notifications/Notifications';\nimport s from './../src/Components/Container/Container.module.css';\n\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n      filter: '',\n    };\n  }\n\n  // Удалить текущий контакт\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(cont => cont.id !== id),\n    });\n    onDeleteNotification();\n  };\n\n  // Проверка на повтор\n  duplicationCheck = newName => {\n    return this.state.contacts.find(contact => {\n      return contact.name === newName;\n    });\n  };\n\n  //Добавить новый контакт\n  addContact = contact => {\n    console.log(contact);\n    if (!this.duplicationCheck(contact.name)) {\n      this.setState({\n        contacts: [\n          {\n            id: uuidv4(),\n            name: contact.name,\n            number: contact.number,\n          },\n          ...this.state.contacts,\n        ],\n      });\n      onSuccsessNotification();\n      return;\n    } else {\n      onErrorNotification();\n      return;\n    }\n  };\n\n  // Устанваливить значение filter  в state\n  setFilter = event => {\n    this.setState({ filter: event.currentTarget.value.trim() });\n  };\n\n  // Фильтр\n  getFilteredResult = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('contacts have been updated');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactNotifications />\n        <Container>\n          <h1 className={s.container__label}>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2 className={s.container__contacts}>Contacts</h2>\n          <Filter name={this.state.filter} onChange={this.setFilter} />\n          <ContactList\n            contacts={this.getFilteredResult()}\n            deleteContact={this.onDeleteContact}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { store } from 'react-notifications-component';\r\nexport const onSuccsessNotification = () => {\r\n  store.addNotification({\r\n    title: 'Congratulations!',\r\n    message: 'Контакт успешно добавлен в справочник',\r\n    type: 'success',\r\n    insert: 'top',\r\n    container: 'top-right',\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onScreen: true,\r\n    },\r\n  });\r\n};\r\n\r\nexport const onErrorNotification = () => {\r\n  store.addNotification({\r\n    title: 'Ошибочка...!',\r\n    message: 'Такой контакт уже есть',\r\n    type: 'danger', // 'default', 'success', 'info', 'warning'\r\n    container: 'top-right', // where to position the notifications\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 2000,\r\n      onScreen: true,\r\n    },\r\n    touchSlidingExit: {\r\n      swipe: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n      fade: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n    },\r\n  });\r\n  //   alert('Такой контакт уже есть');\r\n};\r\n\r\nexport const onDeleteNotification = () => {\r\n  store.addNotification({\r\n    title: 'Информация!',\r\n    message: 'Констакт успешно удален',\r\n    type: 'warning', // 'default', 'success', 'info', 'warning'\r\n    container: 'top-right', // where to position the notifications\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 2000,\r\n      onScreen: true,\r\n    },\r\n    touchSlidingExit: {\r\n      swipe: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n      fade: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n    },\r\n  });\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__11xgr\",\"container__label\":\"Container_container__label__1uYI1\",\"container__contacts\":\"Container_container__contacts__1ZBrA\"};"],"sourceRoot":""}